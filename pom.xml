<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.4.4</version>
		<relativePath />
	</parent>
	<groupId>com.xoriant.xorpay</groupId>
	<artifactId>XORPAY_PROCESS_CLS</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>XORPAY_PROCESS_CLS</name>
	<description>XORPAY_PROCESS_CLS</description>
	<properties>
		<java.version>1.8</java.version>
		<kafka.version>2.5.0</kafka.version>
	</properties>

	<dependencies>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-hateoas</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-velocity</artifactId>
			<version>1.4.7.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-websocket</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.github.xeroapi</groupId>
			<artifactId>xero-java</artifactId>
			<version>4.1.2</version>
		</dependency>
		<!-- <dependency> <groupId>org.apache.poi</groupId> <artifactId>poi</artifactId> 
			<version>4.1.1</version> </dependency> -->

		<!-- <dependency> <groupId>org.apache.poi</groupId> <artifactId>poi-ooxml</artifactId> 
			<version>4.1.1</version> </dependency> -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.oracle.database.jdbc</groupId>
			<artifactId>ojdbc8</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-xml</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>0.9.1</version>
		</dependency>
		<dependency>
			<groupId>xml-security</groupId>
			<artifactId>xmlsec</artifactId>
			<version>1.3.0</version>
		</dependency>
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcpg-jdk15on</artifactId>
			<version>1.51</version>
		</dependency>
		<dependency>
			<groupId>io.cloudio</groupId>
			<artifactId>flow</artifactId>
			<version>1.0</version>
			<scope>system</scope>
			<systemPath>D:\CitiConnectWorkSpace\XorProces\ioflowcore.jar</systemPath>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>30.1.1-jre</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>
		<dependency>
			<groupId>com.prowidesoftware</groupId>
			<artifactId>pw-swift-core</artifactId>
			<version>SRU2017-7.9.3</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>

			<plugin>
				<groupId>com.github.wvengen</groupId>
				<artifactId>proguard-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>proguard</goal>
						</goals>
						<configuration>
							<obfuscate>true</obfuscate>
							<injar>${project.build.finalName}.jar</injar>
							<outjar>${project.build.finalName}.jar</outjar>
							<options>
								<option>-allowaccessmodification</option>
								<option>-dontoptimize</option>
								<option>-dontshrink</option>
								<option>-dontnote</option>
								<option>-dontwarn</option>
								<option>-keepattributes Signature</option>
								<option>-keep public class * implements io.cloudio.secure.Keep</option>
								<option>-useuniqueclassmembernames</option>
								<option>-keepclassmembernames
									public class * implements
									io.cloudio.secure.Keep { public *;
									protected *;
									}
								</option>
								<option> -keep class * { public enum **; } </option>
								<option>
									-keepclassmembers enum * { public *; public static **[]
									values(); public
									static ** valueOf(java.lang.String); }
								</option>
								<option>-keep public class
									com.xoriant.xorpay.data.sync.entity.** {*;}</option>
								<option>-keep public class com.xoriant.xorpay.entity.** {*;}</option>
								<option>-keep public class com.xoriant.xorpay.iso.pain002.**
									{*;}</option>
								<option>-keep public class com.xoriant.xorpay.pojo001.** {*;}</option>
								<option>-keep public interface * extends * { *; }</option>
								<option>-keepattributes
									Exceptions,InnerClasses,Signature,Deprecated,
									SourceFile,LineNumberTable,*Annotation*,EnclosingMethod
								</option>
								<option>-keepclassmembers
									class * implements java.io.Serializable
									{ static final long
									serialVersionUID;
									private static final
									java.io.ObjectStreamField[]
									serialPersistentFields;
									private void
									writeObject(java.io.ObjectOutputStream); private void
									readObject(java.io.ObjectInputStream);
									java.lang.Object
									writeReplace(); java.lang.Object readResolve(); }
								</option>
								<option>-keepattributes
									Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,LocalVariable*Table,*Annotation*,Synthetic,EnclosingMethod</option>
								<option>-keepclassmembers public class * {void set*(***);***
									get*();}</option>
								<option>-keep
									@org.springframework.boot.autoconfigure.SpringBootApplication
									class * {*;}</option>
								<option>-keepclassmembers class * {
									@org.springframework.beans.factory.annotation.Autowired *;
									@org.springframework.beans.factory.annotation.Value *;
									}
								</option>
							</options>
							<injarNotExistsSkip>true</injarNotExistsSkip>
							<libs>
<!-- 								<lib>${java.home}/lib/rt.jar</lib> -->
								<lib>C:\Program Files\Java\jdk1.8.0_191\jre\lib\rt.jar</lib> 
							</libs>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.0</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<layout>ZIP</layout>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
